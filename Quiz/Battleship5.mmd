classDiagram
  %% ==== Core Classes ====
  class GameController {
    -List~IPlayer~ _players
    -int _currentPlayerIndex = 0
    -IBoard board
    +StartGame()
    +TakeTurn(Coordinate)
    +SwitchTurn()
    +EndGame(): bool
    +CheckWinner(): IPlayer?
    +OnShotFired: Action<IPlayer, Coordinate, bool>
    +Shoot(Coordinate): bool
    +RemainingShips(): int
    +PlaceShip(ShipType, List~Coordinate~ ): bool
    +ReceiveShot(Coordinate): bool
    +AllShipsSunk(): bool
    +RegisterHit(Coordinate)
    +IsSunk(): bool
    +MarkHit(Coordinate)
    +HasShip(Coordinate):bool
  }

  class Ship {
    -string _name
    -int _size
    -int _hits
    -List~Coordinate~ _coordinates
    +GetType(ShipType)
  }

  class Coordinate {
    -int _x
    -int _y
    +Equals(Coordinate): bool
    +ToString(): string
  }

  %% ==== Interfaces ====
  class IPlayer {
    <<interface>>
    +GetName()
    +SetName()
  }

  class IBoard {
    <<interface>>
    +GetBoard(Coordinate): Cell
  }

  %% ==== Implementations ====
  class Player {
    -string _name
    -IBoard _ownBoard
    -IBoard _trackingBoard
    -List~Ship~ _fleet
    +GetName()
    +SetName()
  }

  class Board {
    -Cell[][] _grid
    +GetBoard(Coordinate): Cell

  }

  class Cell {
    -Coordinate _position
    -bool _isHit
    -Ship? _ship
  }

  class ShipType {
    CARRIER
    BATTLESHIP
    CRUISER
    SUBMARINE
    DESTROYER
    <<enumeration>>
  }

  %% ==== Relationships ====
  GameController --> IPlayer
  GameController --> IBoard
  GameController --> Ship
  GameController --> Coordinate
  IPlayer <|.. Player
  IBoard <|.. Board
  Board --> Cell
  Ship --> ShipType
  Ship --> Coordinate